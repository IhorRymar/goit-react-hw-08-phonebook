{"version":3,"file":"static/js/278.25c7cb5a.chunk.js","mappings":"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","sources":["components/redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactsStyle.module.css?fd17","components/Phonebook/ContactForm.jsx","components/redux/filter/filter-selectors.js","components/Phonebook/ContactFilter.jsx","components/Phonebook/ContactsListItem.jsx","components/Phonebook/ContactList.jsx","components/Phonebook/Container.jsx","components/Phonebook/MyContacts.jsx","components/pages/MyContactsPage.jsx","components/shared/hooks/useForm.js","webpack://goit-react-hw-08-phonebook/./src/components/pages/PagesStyles.module.css?394a"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const result = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n\n    return normalizedName.includes(normalizedFilter);\n  });\n  return result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsStyle_item__nTbB+\",\"myContactsContainer\":\"ContactsStyle_myContactsContainer__kRTND\",\"container\":\"ContactsStyle_container__cj+Rj\",\"contactForm\":\"ContactsStyle_contactForm__Qy1A8\",\"filterForm\":\"ContactsStyle_filterForm__lHjQk\",\"delBtn\":\"ContactsStyle_delBtn__g+jiy\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'components/redux/contacts/contacts-operations';\nimport { getFilteredContacts } from 'components/redux/contacts/contacts-selectors';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport useForm from 'components/shared/hooks/useForm';\nimport css from '../Phonebook/ContactsStyle.module.css';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const initialState = {\n    name: '',\n    number: '',\n  };\n\n  const onSubmit = data => {\n    if (contacts.find(contact => contact.name === data.name)) {\n      return alert(`Contact of ${data.name} is already exist!`);\n    }\n    dispatch(addContact(data));\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  return (\n    <Form onSubmit={handleSubmit} className={css.contactForm}>\n      <Form.Group className=\"mb-3\" controlId=\"formContactName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={state.name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formContactNumber\">\n        <Form.Label>Phone number</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter number\"\n          value={state.number}\n          name=\"number\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\n\nimport { setFilter } from 'components/redux/filter/filter-actions';\nimport { getFilter } from 'components/redux/filter/filter-selectors';\n\nimport css from '../Phonebook/ContactsStyle.module.css';\n\nconst ContactFilter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <Form className={css.filterForm}>\n      <Form.Group className=\"mb-3\" controlId=\"formContactName\">\n        <Form.Label>Contact name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Find contact\"\n          value={filter}\n          name=\"filter\"\n          onChange={onSetFilter}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default ContactFilter;\n","import PropTypes from 'prop-types';\nimport css from '../Phonebook/ContactsStyle.module.css';\n\nconst ContactsListItem = ({ children }) => {\n  return <li className={css.item}>{children}</li>;\n};\n\nexport default ContactsListItem;\n\nContactsListItem.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import css from '../Phonebook/ContactsStyle.module.css';\nimport ContactsListItem from './ContactsListItem';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'components/redux/contacts/contacts-selectors';\nimport { removeContact } from 'components/redux/contacts/contacts-operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ul className={css.maContactList}>\n        {contacts.map(({ name, number, id }) => (\n          <ContactsListItem key={id}>\n            {name}: <span className={css.item}>{number}</span>\n            <Button\n              className={css.delBtn}\n              variant=\"primary\"\n              type=\"button\"\n              onClick={() => dispatch(removeContact(id))}\n            >\n              Delete\n            </Button>\n          </ContactsListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\n\nimport css from '../Phonebook/ContactsStyle.module.css';\n\nconst Container = ({ title, children }) => {\n  return (\n    <div className={css.container}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport ContactForm from './ContactForm';\nimport ContactFilter from './ContactFilter';\nimport ContactList from './ContactList';\nimport Container from './Container';\n\nimport { fetchContacts } from 'components/redux/contacts/contacts-operations';\n\nimport css from '../Phonebook/ContactsStyle.module.css';\n\nconst MyContacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container\n        fluid=\"sm\"\n        className={css.newContactContainer}\n        title=\"New contact\"\n      >\n        <ContactForm />\n      </Container>\n      <Container\n        fluid=\"sm\"\n        className={css.myContactsContainer}\n        title=\"My contacts\"\n      >\n        <ContactFilter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n\nexport default MyContacts;\n","import Container from 'react-bootstrap/Container';\n\nimport MyContacts from 'components/Phonebook/MyContacts';\n\nimport css from '../pages/PagesStyles.module.css';\n\nconst MyContactsPage = () => {\n  return (\n    <Container fluid=\"sm\" className={css.contactsContainer}>\n      <MyContacts />\n    </Container>\n  );\n};\n\nexport default MyContactsPage;\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n  const id = nanoid();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      id: id,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"PagesStyles_loginContainer__SmAdF\",\"registrationContainer\":\"PagesStyles_registrationContainer__+gppS\",\"cardContainer\":\"PagesStyles_cardContainer__f1FV7\",\"alertMessage\":\"PagesStyles_alertMessage__3UnnC\",\"contactsContainer\":\"PagesStyles_contactsContainer__rQjlK\"};"],"names":["getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","name","includes","useSelector","dispatch","useDispatch","useForm","initialState","number","onSubmit","data","find","contact","alert","addContact","state","handleChange","handleSubmit","Form","className","css","controlId","type","placeholder","value","onChange","pattern","title","required","Button","variant","getFilter","target","setFilter","children","map","id","onClick","removeContact","useEffect","fetchContacts","fluid","Container","useState","setState","nanoid","prevState","e","preventDefault"],"sourceRoot":""}